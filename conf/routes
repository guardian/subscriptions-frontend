# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET         /robots.txt                      controllers.CachedAssets.at(path="/public", file="robots.txt")
GET         /favicon.ico                     controllers.CacheBustedAssets.at(path="images/favicons/32x32.ico")

# Editions homepage
GET         /                                controllers.Homepage.index
GET         /au                              controllers.Homepage.indexAu
GET         /us                              controllers.Homepage.indexUs
GET         /int                             controllers.Homepage.indexInt

# Health check
GET         /healthcheck                     controllers.Management.healthcheck
# Manifest
GET         /management/manifest             controllers.Management.manifest

# Digital pack
GET         /digital                         controllers.DigitalPack.uk
GET         /us/digital                      controllers.DigitalPack.us
GET         /au/digital                      controllers.DigitalPack.au
GET         /int/digital                     controllers.DigitalPack.int

# Checkout
GET         /checkout/:product               controllers.Checkout.renderCheckout(countryGroup: CountryGroup ?= CountryGroup.UK, promoCode: Option[PromoCode], product: com.gu.memsub.ProductFamily)
GET         /checkout/:product/thank-you     controllers.Checkout.thankYou(product: com.gu.memsub.ProductFamily)
GET         /checkout/paper                  controllers.Checkout.renderPaperCheckout(countryGroup: CountryGroup ?= CountryGroup.UK, promoCode: Option[PromoCode])
POST        /checkout/paper                  controllers.Checkout.handlePaperCheckout
GET         /checkout                        controllers.Checkout.renderDigipackCheckout(countryGroup: CountryGroup ?= CountryGroup.UK, promoCode: Option[PromoCode])
POST        /checkout                        controllers.Checkout.handleCheckout(allowPaper: Boolean = false)

GET         /checkout/check-identity         controllers.Checkout.checkIdentity(email: String)
POST        /checkout/check-account          controllers.Checkout.checkAccount
POST        /checkout/register-guest-user    controllers.Checkout.convertGuestUser
GET         /checkout/thank-you              controllers.Checkout.thankYou(product: com.gu.memsub.ProductFamily = com.gu.memsub.Digipack)

GET         /checkout/lookupPromotion        controllers.Checkout.validatePromoCode(promoCode: PromoCode, productRatePlanId: ProductRatePlanId, country: Country)

# collection and delivery
GET         /collection/paper-digital        controllers.Shipping.viewCollectionPaperDigital
GET         /collection/paper                controllers.Shipping.viewCollectionPaper
GET         /delivery/paper-digital          controllers.Shipping.viewDeliveryPaperDigital
GET         /delivery/paper                  controllers.Shipping.viewDeliveryPaper

# Staff signin (note, done by OAuth, in addition to regular signin)
GET         /staff/login                     controllers.OAuth.login
GET         /staff/loginAction               controllers.OAuth.loginAction
GET         /staff/catalog                   controllers.Management.catalog
GET         /staff/cas                       controllers.CAS.index
POST        /staff/cas/subscription          controllers.CAS.searchSubscription
POST        /staff/cas/token                 controllers.CAS.generateToken
GET         /oauth2callback                  controllers.OAuth.oauth2Callback

# Pattern Library
GET         /patterns                        controllers.PatternLibrary.patterns

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                    controllers.CachedAssets.at(path="/public", file)

GET         /test-users                      controllers.Testing.testUser

# Promotions
GET         /p/:promoCodeStr                 controllers.PromoLandingPage.render(promoCodeStr: String)

# NOCSRF
POST         /q                              controllers.PromoLandingPage.preview
